<Window x:Class="OnlineRadio.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OnlineRadio"
        mc:Ignorable="d"
        Template="{DynamicResource win1}"
        Title="Radio by BVO" Height="200" Width="400" MinHeight="200" MinWidth="400" LocationChanged="Window_LocationChanged" Loaded="Window_Loaded" KeyDown="Window_KeyDown" MouseWheel="Window_MouseWheel" Closing="Window_Closing" StateChanged="Window_StateChanged">

    <Window.Resources>
        <ControlTemplate x:Key="win1" TargetType="{x:Type Window}">
            <Border Name="borderWin1" Width="{TemplateBinding Window.Width}" Height="{TemplateBinding Window.Height}">
                <Border.Background>
                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1.5">
                        <GradientStop  Color="Azure" Offset="0"/>
                        <GradientStop  Color="DodgerBlue" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
                <ContentPresenter />
            </Border>
        </ControlTemplate>
        <Style x:Key="SliderRepeatButtonUp" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border BorderThickness="1" BorderBrush="Black" Background="Black" Height="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButtonDown" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border SnapsToDevicePixels="True" BorderThickness="1" Height="3">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Color="Green" Offset="0"/>
                                    <GradientStop Color="Lime" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>

                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0" >
                                    <GradientStop Color="Green" Offset="0"/>
                                    <GradientStop Color="Lime" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Ellipse Height="15" Width="15" Fill="White"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="SliderVolume" TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Track Grid.Row="1" Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButtonDown}" Command="Slider.DecreaseLarge"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButtonUp}" Command="Slider.IncreaseLarge"/>
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="Slider_Volume" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21"/>
                    <Setter Property="MinWidth" Value="105"/>
                    <Setter Property="Template" Value="{StaticResource SliderVolume}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Button.RenderTransformOrigin" Value="0.5 0.5" />
            <!-- Свойство задаёт исходные трансформации для дальнейшей анимации в триггерах -->
            <Setter Property="Button.RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1" />
                    </TransformGroup>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="border" Property="Opacity" Value="0.5" />
                                <Setter TargetName="border" Property="BorderBrush" Value="Red" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="border" Property="Opacity" Value="1" />
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Триггер срабатывает на нажатие на кнопку -->
                <Trigger Property="Button.IsPressed" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation From="1" To="0.75" Duration="0:0:0.1" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"/>
                                <DoubleAnimation From="1" To="0.75" Duration="0:0:0.1" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>

                    <!-- Триггер срабатывает на отжатие кнопки -->
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation From="0.75" To="1" Duration="0:0:0.1" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX"/>
                                <DoubleAnimation From="0.75" To="1" Duration="0:0:0.1" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Viewbox>
        <Canvas Height="199" Width="400" Background="Transparent">
            <ListBox Background="Transparent" KeyDown="Window_KeyDown" x:Name="listBoxStations" ScrollViewer.CanContentScroll="False" Height="142" Width="183" HorizontalAlignment="Center" Canvas.Top="5" Canvas.Left="217" VerticalAlignment="Top" SelectionChanged="listBoxStations_SelectionChanged">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Margin" Value="5, 3"/>
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Background" Value="LightSteelBlue"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="border" Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}">
                                        <ContentPresenter Margin="{TemplateBinding Padding}"/>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="LightBlue"/>
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="2">
                                            <Setter Property="Background" Value="Red"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="LimeGreen"/>
                                            <Setter Property="Foreground" Value="White"/>
                                            <Setter Property="BorderThickness" Value="2"/>
                                            <Setter Property="BorderBrush" Value="Black"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
            <Button x:Name="btnPlay" Click="btnPlay_Click" Style="{StaticResource ButtonStyle1}" Width="50" Height="50" Canvas.Left="80" Canvas.Top="5" HorizontalAlignment="Center" VerticalAlignment="Top"/>
            <Button x:Name="btnPrev" Click="btnPrev_Click" Style="{StaticResource ButtonStyle1}" Width="35" Height="34" Canvas.Left="18" Canvas.Top="13" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            <Button x:Name="btnNext" Click="btnNext_Click" Style="{StaticResource ButtonStyle1}" Width="35" Height="34" Canvas.Left="157" Canvas.Top="13" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBlock x:Name="textBlockName" Text="text" Foreground="Green" TextAlignment="Center" FontSize="24" FontFamily="Constantia" Canvas.Left="18" Canvas.Top="55" HorizontalAlignment="Left" VerticalAlignment="Center" Width="174"/>
            <TextBlock x:Name="textBlockTime" Text="00:00:00" FontFamily="Constantia" TextAlignment="Center"  FontSize="24" Canvas.Left="36" Canvas.Top="77" Height="30" Width="138" HorizontalAlignment="Left" VerticalAlignment="Center" />
            <Label Content="Volume:" FontFamily="Constantia" FontSize="20" Canvas.Left="64" Height="30" Canvas.Top="100" HorizontalAlignment="Center" VerticalAlignment="Top"/>
            <Slider x:Name="sliderVolume" Style="{StaticResource Slider_Volume}" Value="100" IsMoveToPointEnabled="True" HorizontalAlignment="Center" VerticalAlignment="Top" Width="190" Canvas.Top="133" Canvas.Left="10" Maximum="100" ValueChanged="sliderVolume_ValueChanged"/>
            <Button x:Name="btnTopmost" Background="Crimson" Content="Top" FontSize="10"  Height="20" Width="26" Canvas.Top="108" Canvas.Left="10" Click="btnTopmost_Click"/>
            <Button Name="btnMute" Background="Green" Content="Mute" FontSize="10" Click="btnMute_Click" Height="20" Width="34" Canvas.Top="108" Canvas.Left="166"/>
        </Canvas>
    </Viewbox>
</Window>
